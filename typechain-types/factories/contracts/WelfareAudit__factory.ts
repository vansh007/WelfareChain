/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  WelfareAudit,
  WelfareAuditInterface,
} from "../../contracts/WelfareAudit";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_welfareToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "logId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "ministry",
        type: "address",
      },
    ],
    name: "AuditLogCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "ministry",
        type: "address",
      },
    ],
    name: "MinistryRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "auditLogs",
    outputs: [
      {
        internalType: "address",
        name: "ministry",
        type: "address",
      },
      {
        internalType: "string",
        name: "program",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "date",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "program",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "date",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
    ],
    name: "createAuditLog",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getAuditLog",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "ministry",
            type: "address",
          },
          {
            internalType: "string",
            name: "program",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "date",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct WelfareAudit.AuditLog",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAuditLogCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ministry",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getMinistryAuditLog",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "ministry",
            type: "address",
          },
          {
            internalType: "string",
            name: "program",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "date",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct WelfareAudit.AuditLog",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ministry",
        type: "address",
      },
    ],
    name: "getMinistryAuditLogCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isMinistry",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "ministryAuditLogCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ministryAuditLogs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ministry",
        type: "address",
      },
    ],
    name: "registerMinistry",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "welfareToken",
    outputs: [
      {
        internalType: "contract WelfareToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161113438038061113483398101604081905261002f916100d4565b338061005557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61005e81610084565b50600180546001600160a01b0319166001600160a01b0392909216919091179055610104565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100e657600080fd5b81516001600160a01b03811681146100fd57600080fd5b9392505050565b611021806101136000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063715018a61161008c5780638da5cb5b116100665780638da5cb5b1461021c578063b48749c51461022d578063e887319a1461024d578063f2fde38b1461026057600080fd5b8063715018a6146101f957806373576eee1461020157806383bf32261461020957600080fd5b806350ef19cf116100c857806350ef19cf1461014e5780635a3092f8146101775780635ee68a22146101a257806360760415146101d557600080fd5b8063290ee509146100ef57806345779fc8146101185780634a73139314610139575b600080fd5b6101026100fd366004610bea565b610273565b60405161010f9190610c5a565b60405180910390f35b61012b610126366004610bea565b6104a0565b60405190815260200161010f565b61014c610147366004610cc2565b6104d1565b005b61012b61015c366004610cc2565b6001600160a01b031660009081526005602052604090205490565b60015461018a906001600160a01b031681565b6040516001600160a01b03909116815260200161010f565b6101c56101b0366004610cc2565b60026020526000908152604090205460ff1681565b604051901515815260200161010f565b6101e86101e3366004610ce4565b61058e565b60405161010f959493929190610cfd565b61014c6106ea565b60035461012b565b61014c610217366004610dee565b6106fe565b6000546001600160a01b031661018a565b61012b61023b366004610cc2565b60056020526000908152604090205481565b61010261025b366004610ce4565b610900565b61014c61026e366004610cc2565b610adb565b61027b610b96565b6001600160a01b03831660009081526005602052604090205482106102e75760405162461bcd60e51b815260206004820181905260248201527f496e76616c6964206d696e6973747279206175646974206c6f6720696e64657860448201526064015b60405180910390fd5b6001600160a01b03831660009081526004602052604090208054600391908490811061031557610315610e65565b90600052602060002001548154811061033057610330610e65565b60009182526020918290206040805160a0810190915260059092020180546001600160a01b03168252600181018054929391929184019161037090610e7b565b80601f016020809104026020016040519081016040528092919081815260200182805461039c90610e7b565b80156103e95780601f106103be576101008083540402835291602001916103e9565b820191906000526020600020905b8154815290600101906020018083116103cc57829003601f168201915b50505050508152602001600282015481526020016003820154815260200160048201805461041690610e7b565b80601f016020809104026020016040519081016040528092919081815260200182805461044290610e7b565b801561048f5780601f106104645761010080835404028352916020019161048f565b820191906000526020600020905b81548152906001019060200180831161047257829003601f168201915b505050505081525050905092915050565b600460205281600052604060002081815481106104bc57600080fd5b90600052602060002001600091509150505481565b6104d9610b19565b6001600160a01b03811660009081526002602052604090205460ff16156105425760405162461bcd60e51b815260206004820152601d60248201527f4164647265737320697320616c72656164792061206d696e697374727900000060448201526064016102de565b6001600160a01b038116600081815260026020526040808220805460ff19166001179055517f80bef479f448790f02e59555bd742f260a7f1e754527e2a58fed0681aef7a0d99190a250565b6003818154811061059e57600080fd5b6000918252602090912060059091020180546001820180546001600160a01b039092169350906105cd90610e7b565b80601f01602080910402602001604051908101604052809291908181526020018280546105f990610e7b565b80156106465780601f1061061b57610100808354040283529160200191610646565b820191906000526020600020905b81548152906001019060200180831161062957829003601f168201915b50505050509080600201549080600301549080600401805461066790610e7b565b80601f016020809104026020016040519081016040528092919081815260200182805461069390610e7b565b80156106e05780601f106106b5576101008083540402835291602001916106e0565b820191906000526020600020905b8154815290600101906020018083116106c357829003601f168201915b5050505050905085565b6106f2610b19565b6106fc6000610b46565b565b3360009081526002602052604090205460ff1661075d5760405162461bcd60e51b815260206004820152601860248201527f43616c6c6572206973206e6f742061206d696e6973747279000000000000000060448201526064016102de565b600083116107ad5760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f60448201526064016102de565b600380546040805160a08101825233815260208101888152918101879052606081018690526080810185905260018301845560009390935282517fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b6005840290810180546001600160a01b0319166001600160a01b03909316929092178255915192939290917fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c01906108609082610f04565b506040820151600282015560608201516003820155608082015160048201906108899082610f04565b50503360008181526004602090815260408083208054600181018255908452828420018690559282526005905290812080549250906108c783610fc4565b9091555050604051339082907f734c91cdc7229291639cc7eaf543cc45546ecda66291fb6984a48fc0801760fc90600090a35050505050565b610908610b96565b60035482106109595760405162461bcd60e51b815260206004820152601760248201527f496e76616c6964206175646974206c6f6720696e64657800000000000000000060448201526064016102de565b6003828154811061096c5761096c610e65565b60009182526020918290206040805160a0810190915260059092020180546001600160a01b0316825260018101805492939192918401916109ac90610e7b565b80601f01602080910402602001604051908101604052809291908181526020018280546109d890610e7b565b8015610a255780601f106109fa57610100808354040283529160200191610a25565b820191906000526020600020905b815481529060010190602001808311610a0857829003601f168201915b505050505081526020016002820154815260200160038201548152602001600482018054610a5290610e7b565b80601f0160208091040260200160405190810160405280929190818152602001828054610a7e90610e7b565b8015610acb5780601f10610aa057610100808354040283529160200191610acb565b820191906000526020600020905b815481529060010190602001808311610aae57829003601f168201915b5050505050815250509050919050565b610ae3610b19565b6001600160a01b038116610b0d57604051631e4fbdf760e01b8152600060048201526024016102de565b610b1681610b46565b50565b6000546001600160a01b031633146106fc5760405163118cdaa760e01b81523360048201526024016102de565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040518060a0016040528060006001600160a01b03168152602001606081526020016000815260200160008152602001606081525090565b80356001600160a01b0381168114610be557600080fd5b919050565b60008060408385031215610bfd57600080fd5b610c0683610bce565b946020939093013593505050565b6000815180845260005b81811015610c3a57602081850181015186830182015201610c1e565b506000602082860101526020601f19601f83011685010191505092915050565b602080825282516001600160a01b03168282015282015160a06040830152600090610c8860c0840182610c14565b905060408401516060840152606084015160808401526080840151601f198483030160a0850152610cb98282610c14565b95945050505050565b600060208284031215610cd457600080fd5b610cdd82610bce565b9392505050565b600060208284031215610cf657600080fd5b5035919050565b6001600160a01b038616815260a060208201819052600090610d2190830187610c14565b8560408401528460608401528281036080840152610d3f8185610c14565b98975050505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610d7257600080fd5b813567ffffffffffffffff80821115610d8d57610d8d610d4b565b604051601f8301601f19908116603f01168101908282118183101715610db557610db5610d4b565b81604052838152866020858801011115610dce57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060808587031215610e0457600080fd5b843567ffffffffffffffff80821115610e1c57600080fd5b610e2888838901610d61565b955060208701359450604087013593506060870135915080821115610e4c57600080fd5b50610e5987828801610d61565b91505092959194509250565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680610e8f57607f821691505b602082108103610eaf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610eff57600081815260208120601f850160051c81016020861015610edc5750805b601f850160051c820191505b81811015610efb57828155600101610ee8565b5050505b505050565b815167ffffffffffffffff811115610f1e57610f1e610d4b565b610f3281610f2c8454610e7b565b84610eb5565b602080601f831160018114610f675760008415610f4f5750858301515b600019600386901b1c1916600185901b178555610efb565b600085815260208120601f198616915b82811015610f9657888601518255948401946001909101908401610f77565b5085821015610fb45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060018201610fe457634e487b7160e01b600052601160045260246000fd5b506001019056fea264697066735822122009546b666c1dc1af6d0b93f4ef50c350637f052445f235bb6e88085cca13893264736f6c63430008140033";

type WelfareAuditConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WelfareAuditConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WelfareAudit__factory extends ContractFactory {
  constructor(...args: WelfareAuditConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _welfareToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_welfareToken, overrides || {});
  }
  override deploy(
    _welfareToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_welfareToken, overrides || {}) as Promise<
      WelfareAudit & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): WelfareAudit__factory {
    return super.connect(runner) as WelfareAudit__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WelfareAuditInterface {
    return new Interface(_abi) as WelfareAuditInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): WelfareAudit {
    return new Contract(address, _abi, runner) as unknown as WelfareAudit;
  }
}
