/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DocumentVerification,
  DocumentVerificationInterface,
} from "../../contracts/DocumentVerification";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "documentId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "verifier",
        type: "address",
      },
    ],
    name: "DocumentRejected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "documentId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "DocumentUploaded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "documentId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "verifier",
        type: "address",
      },
    ],
    name: "DocumentVerified",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "documents",
    outputs: [
      {
        internalType: "bytes32",
        name: "documentHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isVerified",
        type: "bool",
      },
      {
        internalType: "address",
        name: "verifiedBy",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_documentHash",
        type: "bytes32",
      },
    ],
    name: "getDocumentDetails",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isVerified",
        type: "bool",
      },
      {
        internalType: "address",
        name: "verifiedBy",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUserDocuments",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_documentHash",
        type: "bytes32",
      },
    ],
    name: "isDocumentVerified",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_documentHash",
        type: "bytes32",
      },
    ],
    name: "rejectDocument",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_documentHash",
        type: "bytes32",
      },
    ],
    name: "uploadDocument",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userDocuments",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_documentHash",
        type: "bytes32",
      },
    ],
    name: "verifyDocument",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610805806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638e4d0f401161005b5780638e4d0f401461015957806390a4b162146101d5578063e5dcfd80146101f5578063fe35089f1461022b57600080fd5b80632b2805db1461008d578063335039d614610110578063577a1b92146101255780636efb635514610146575b600080fd5b6100d961009b36600461070a565b600060208190529081526040902080546001820154600283015460039093015491926001600160a01b0391821692909160ff82169161010090041685565b604080519586526001600160a01b0394851660208701528501929092521515606084015216608082015260a0015b60405180910390f35b61012361011e36600461070a565b61023e565b005b61013861013336600461073f565b61039d565b604051908152602001610107565b61012361015436600461070a565b6103ce565b6101a261016736600461070a565b6000908152602081905260409020600181015460028201546003909201546001600160a01b039182169360ff82169261010090920490911690565b604080516001600160a01b0395861681526020810194909452911515918301919091529091166060820152608001610107565b6101e86101e3366004610769565b610517565b604051610107919061078b565b61021b61020336600461070a565b60009081526020819052604090206003015460ff1690565b6040519015158152602001610107565b61012361023936600461070a565b610583565b6000818152602081905260409020600101546001600160a01b03166102a45760405162461bcd60e51b8152602060048201526017602482015276111bd8dd5b595b9d08191bd95cc81b9bdd08195e1a5cdd604a1b60448201526064015b60405180910390fd5b60008181526020819052604090206003015460ff16156103025760405162461bcd60e51b8152602060048201526019602482015278111bd8dd5b595b9d08185b1c9958591e481d995c9a599a5959603a1b604482015260640161029b565b600081815260208190526040902060010154336001600160a01b039091160361036d5760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f742072656a656374206f776e20646f63756d656e74000000000000604482015260640161029b565b604051339082907f5c990a7eaaa76d7a78a23b93cb36d7eb7754b02c053e009339bdb518b37c364c90600090a350565b600160205281600052604060002081815481106103b957600080fd5b90600052602060002001600091509150505481565b6000818152602081905260409020600101546001600160a01b0316156104365760405162461bcd60e51b815260206004820152601760248201527f446f63756d656e7420616c726561647920657869737473000000000000000000604482015260640161029b565b6040805160a0810182528281523360208083018281524284860190815260006060860181815260808701828152898352828652888320975188559351600188810180546001600160a01b039384166001600160a01b031990911617905593516002890155905160039097018054945190911661010002610100600160a81b0319971515979097166001600160a81b0319909416939093179590951790915582845280825284842080549182018155845290832001849055915183917ff068cd8886f41c77384e104a2ee1694e6a0bdd25a7a80b751155a0e43545185091a350565b6001600160a01b03811660009081526001602090815260409182902080548351818402810184019094528084526060939283018282801561057757602002820191906000526020600020905b815481526020019060010190808311610563575b50505050509050919050565b6000818152602081905260409020600101546001600160a01b03166105e45760405162461bcd60e51b8152602060048201526017602482015276111bd8dd5b595b9d08191bd95cc81b9bdd08195e1a5cdd604a1b604482015260640161029b565b60008181526020819052604090206003015460ff16156106425760405162461bcd60e51b8152602060048201526019602482015278111bd8dd5b595b9d08185b1c9958591e481d995c9a599a5959603a1b604482015260640161029b565b600081815260208190526040902060010154336001600160a01b03909116036106ad5760405162461bcd60e51b815260206004820152601a60248201527f43616e6e6f7420766572696679206f776e20646f63756d656e74000000000000604482015260640161029b565b60008181526020819052604080822060030180543361010081026001600160a81b0319909216919091176001179091559051909183917f536e3e5b353ccc73d28014bd5d2ff03ced4b84fa024148b4949000af72f0a2549190a350565b60006020828403121561071c57600080fd5b5035919050565b80356001600160a01b038116811461073a57600080fd5b919050565b6000806040838503121561075257600080fd5b61075b83610723565b946020939093013593505050565b60006020828403121561077b57600080fd5b61078482610723565b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156107c3578351835292840192918401916001016107a7565b5090969550505050505056fea2646970667358221220e1c06953a734fba49c66d8ac461abf1a1a2aaead123f59f5113c824a1ec625d364736f6c63430008140033";

type DocumentVerificationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DocumentVerificationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DocumentVerification__factory extends ContractFactory {
  constructor(...args: DocumentVerificationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DocumentVerification & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): DocumentVerification__factory {
    return super.connect(runner) as DocumentVerification__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DocumentVerificationInterface {
    return new Interface(_abi) as DocumentVerificationInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DocumentVerification {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as DocumentVerification;
  }
}
